input {
  # File input for system logs (Linux/Mac)
  file {
    path => "/var/log/*.log"
    type => "system"
    start_position => "beginning"
  }
  
  # Generate sample security events for testing
  generator {
    type => "sample_security"
    message => 'Sample security event: User login failed for user "attacker" from IP 192.168.1.100'
    lines => [
      "Sample security event: User login failed for user 'attacker' from IP 192.168.1.100",
      "Sample security event: Access denied to sensitive file /etc/passwd",
      "Sample security event: Firewall blocked port scan from 10.0.0.5",
      "Sample security event: Brute force attack detected from 172.16.1.200",
      "Sample security event: Suspicious process launched: crypto_miner.exe"
    ]
    count => 100000  # Generate lots of events
  }

  # TCP input for manual testing
  tcp {
    port => 5000
    type => "manual_input"
  }
}

filter {
  # Add timestamp and host information
  mutate {
    add_field => { 
      "project" => "mini-siem" 
      "environment" => "development"
    }
  }
  
  # Parse sample security events
  if [type] == "sample_security" {
    grok {
      match => { "message" => "Sample security event: %{GREEDYDATA:event_details}" }
    }
    
    # Add a random severity level
    mutate {
      add_field => { 
        "severity" => "%{[@metadata][random_severity]}"
      }
    }
  }
  
  # Add timestamp if missing
  if [@timestamp] == "" {
    ruby {
      code => "event.set('@timestamp', LogStash::Timestamp.now)"
    }
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "siem-logs-%{+YYYY.MM.dd}"
  }
  
  # Also print to console (for debugging)
  stdout { 
    codec => rubydebug 
  }
}